name: Build & Push CPU/GPU Dev/Prod Images

on:
  push:
    branches: [ main ]
    tags:    [ 'v*.*.*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}

permissions:
  contents:     read
  packages:     write
  id-token:     write
  attestations: write

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.expand.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install pyyaml

      - name: Expand matrix.yaml
        id: expand
        run: |
          matrix_json=$(python3 scripts/expand_matrix.py)
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  build:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            type=raw,value=py${{ matrix.python }}-${{ matrix.extra }}-${{ matrix.mode }}
            type=sha,format=short,prefix=sha-
            type=ref,event=tag

      - name: Build & Push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            BASE_IMAGE=${{ matrix.base }}
            PYTHON_VERSION=${{ matrix.python }}
            EXTRA=${{ matrix.extra }}
            MODE=${{ matrix.mode }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Attest Provenance
        if: success()
        uses: actions/attest-build-provenance@v1
        with:
          subject-name:   ${{ env.REGISTRY }}/${{ env.IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
